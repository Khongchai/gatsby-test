{"version":3,"sources":["webpack:///./src/templates/AllPosts.js"],"names":["allPosts","pageContext","data","currentPage","isFirst","isLast","numPages","prevPage","nextPage","posts","allMdx","edges","textAlign","margin","color","map","post","key","node","frontmatter","slug","date","title","excerpt","pageQuery"],"mappings":"6FAAA,kGAsDeA,UA7CE,SAAC,GACjB,IADkBC,EACnB,EADmBA,YAAaC,EAChC,EADgCA,KAErBC,EAAyBF,EAAzBE,YACDC,EAA0B,IAAhBD,EACVE,EAASF,IAFiBF,EAAZK,SAIdC,EAAWJ,EAAc,GAAM,EAAI,IAAxB,SAAqCA,EAAc,GAC9DK,EAAQ,SAAWL,EAAc,GAEjCM,EAAQP,EAAKQ,OAAOC,MAC1B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAIC,UAAU,SAASC,OAAO,cAA9B,uBAGA,kBAAC,IAAD,CAAGC,MAAM,QAAQF,UAAU,UAA3B,mUAOCH,EAAMM,KAAI,SAAAC,GAAI,OACX,kBAAC,IAAD,CACIC,IAAKD,EAAKE,KAAKC,YAAYC,KAC3BC,KAAML,EAAKE,KAAKC,YAAYE,KAC5BC,MAAON,EAAKE,KAAKC,YAAYG,MAC7BC,QAASP,EAAKE,KAAKC,YAAYI,QAC/BH,KAAMJ,EAAKE,KAAKC,YAAYC,WAIxC,kBAAC,IAAD,CACAhB,QAASA,EACTC,OAAQA,EACRE,SAAUA,EACVC,SAAUA,MASf,IAAMgB,EAAS","file":"component---src-templates-all-posts-js-ffbc39772a657a2b69de.js","sourcesContent":["import React from \"react\";\r\nimport {graphql} from \"gatsby\";\r\nimport { Container, Content, ContentCard, FeatureImage, Pagination, SEO} from \"../components\";\r\nimport {H1, P} from \"../elements\";\r\n\r\n//Note: The result of the query is automatically inserted into your React component on the data prop. \r\n//GraphQL and Gatsby let you ask for data and then immediately start using it.\r\n\r\n//A context passed in gatsby-node can be read through the pageContext variable.\r\nconst allPosts = ({pageContext, data}) =>\r\n{\r\n    const {currentPage, numPages} = pageContext;\r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numPages;\r\n    //If the previous page is page one, URL should be set to home (\"/\").\r\n    const prevPage = currentPage - 1 === 1 ? \"/\": `/page${currentPage - 1}`;\r\n    const nextPage = `/page${currentPage + 1}`;\r\n\r\n    const posts = data.allMdx.edges;\r\n    return(\r\n        <Container>\r\n            <SEO/>\r\n            <FeatureImage/>\r\n            <Content>\r\n                <H1 textAlign=\"center\" margin=\"0 0 1rem 0\">\r\n                    Once upon a time...\r\n                </H1>\r\n                <P color=\"dark2\" textAlign=\"center\">\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium \r\n                    doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore \r\n                    veritatis et quasi architecto beatae vitae dicta sunt explicabo. \r\n                    Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit \r\n                    aut fugit, sed quia consequuntur magni \r\n                </P>\r\n                {posts.map(post => (\r\n                    <ContentCard \r\n                        key={post.node.frontmatter.slug}\r\n                        date={post.node.frontmatter.date}\r\n                        title={post.node.frontmatter.title}\r\n                        excerpt={post.node.frontmatter.excerpt}\r\n                        slug={post.node.frontmatter.slug}\r\n                    />\r\n                ))}\r\n            </Content>\r\n            <Pagination\r\n            isFirst={isFirst}\r\n            isLast={isLast}\r\n            prevPage={prevPage}\r\n            nextPage={nextPage}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default allPosts;\r\n\r\n//skip and limit variables are injected into this file through gatsby-node\r\nexport const pageQuery = graphql`\r\n    query AllPostsQuery($skip: Int!, $limit: Int!)\r\n    {\r\n        allMdx(sort: {fields: frontmatter___date, order: DESC}, skip: $skip, limit: $limit) \r\n        {\r\n            edges \r\n            {\r\n                node \r\n                {\r\n                    frontmatter \r\n                    {\r\n                        slug\r\n                        title\r\n                        date(formatString: \"DD MMMM YYYY\")\r\n                        excerpt\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n`;\r\n\r\n\r\n/*\r\nOld index.js\r\nimport React from \"react\";\r\nimport { Container, FeatureImage, Content, ContentCard } from \"../components\";\r\n\r\nexport const IndexPage = () => \r\n{\r\n  return(\r\n    <Container>\r\n      <FeatureImage/>\r\n      <Content>\r\n        <ContentCard date=\"20/12/2020\" title=\"Test Title\" excerpt=\"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ad quis nobis eius recusandae rerum cum magnam perspiciatis vero ea voluptatum.\" slug=\"/test\" />\r\n      </Content>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default IndexPage;\r\n\r\n\r\n\r\n*/"],"sourceRoot":""}